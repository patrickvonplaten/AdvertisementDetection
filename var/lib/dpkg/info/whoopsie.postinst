#! /bin/sh
# postinst for whoopsie

set -e

WHOOPSIE_DEFAULT_FILE=/etc/default/whoopsie

if [ "$1" = configure ]; then
		if ! getent passwd whoopsie >/dev/null; then
			adduser --disabled-password --quiet --system \
				--home /nonexistent --no-create-home --group whoopsie \
				--shell /bin/false
		fi
		mkdir -p -m 3777 /var/crash
		chmod g+s /var/crash
		chgrp whoopsie /var/crash
		chgrp whoopsie /var/crash/*.crash >/dev/null 2>&1 || true
		chmod 0640 /var/crash/*.crash >/dev/null 2>&1 || true

		mkdir -p -m 3777 /var/metrics
		chmod g+s /var/metrics
		chgrp whoopsie /var/metrics
fi

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask whoopsie.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled whoopsie.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable whoopsie.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state whoopsie.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/whoopsie" ]; then
		update-rc.d whoopsie defaults >/dev/null
	fi
	if [ -x "/etc/init.d/whoopsie" ] || [ -e "/etc/init/whoopsie.conf" ]; then
		invoke-rc.d whoopsie start || exit $?
	fi
fi
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper rm_conffile /etc/cron.daily/whoopsie 0.1.25 -- "$@"
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper rm_conffile /etc/default/whoopsie 0.2.47 -- "$@"
# End automatically added section


# disable whoopsie on upgrade if it was disabled in /etc/default. Remove after transition.
if [ -f ${WHOOPSIE_DEFAULT_FILE}.disable ]; then
	update-rc.d whoopsie defaults >/dev/null
	update-rc.d whoopsie disable >/dev/null
	invoke-rc.d whoopsie stop >/dev/null
	rm -f ${WHOOPSIE_DEFAULT_FILE}.disable
fi

exit 0
