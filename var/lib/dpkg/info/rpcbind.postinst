#!/bin/sh

set -e

if [ "$1" = configure ] ; then
	# /run transition (see #633035)
	if dpkg --compare-versions "$2" lt "0.2.0-7"; then
		if [ -f /lib/init/rw/sendsigs.omit.d/rpcbind ]; then
			mv /lib/init/rw/sendsigs.omit.d/rpcbind /run/rpcbind.pid
			ln -s /run/rpcbind.pid /run/sendsigs.omit.d/rpcbind
		fi
	fi
	if dpkg --compare-versions "$2" lt "0.2.0-8.1"; then
		update-rc.d -f rpcbind remove
	fi
fi

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask rpcbind.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled rpcbind.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable rpcbind.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state rpcbind.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask rpcbind.socket >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled rpcbind.socket; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable rpcbind.socket >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state rpcbind.socket >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
# In case this system is running systemd, we need to ensure that all
# necessary tmpfiles (if any) are created before starting.
if [ -d /run/systemd/system ] ; then
	systemd-tmpfiles --create /usr/lib/tmpfiles.d/rpcbind.conf >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ -x "/etc/init.d/rpcbind-boot" ]; then
	update-rc.d rpcbind-boot defaults >/dev/null
fi
# End automatically added section
# Automatically added by dh_installinit
# In case this system is running systemd, we need to ensure that all
# necessary tmpfiles (if any) are created before starting.
if [ -d /run/systemd/system ] ; then
	systemd-tmpfiles --create /usr/lib/tmpfiles.d/rpcbind.conf >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ -x "/etc/init.d/portmap-wait" ]; then
	update-rc.d portmap-wait defaults >/dev/null
fi
# End automatically added section
# Automatically added by dh_installinit
# In case this system is running systemd, we need to ensure that all
# necessary tmpfiles (if any) are created before starting.
if [ -d /run/systemd/system ] ; then
	systemd-tmpfiles --create /usr/lib/tmpfiles.d/rpcbind.conf >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ -x "/etc/init.d/rpcbind" ]; then
	update-rc.d rpcbind defaults >/dev/null
fi
if [ -x "/etc/init.d/rpcbind" ] || [ -e "/etc/init/rpcbind.conf" ]; then
	invoke-rc.d rpcbind start || exit $?
fi
# End automatically added section

