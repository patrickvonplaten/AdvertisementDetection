#!/bin/sh
# postrm script for gridengine-common
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge)
        db_get shared/gridenginecell || true
        SGE_CELL="${RET}"
        if [ -z "${SGE_CELL}" ]; then
            SGE_CELL=default
        fi
        [ -x /usr/bin/ucf ] && ucf --purge /etc/default/gridengine
        rm -f /etc/default/gridengine
        rm -f /var/lib/gridengine/${SGE_CELL}/common/bootstrap
        db_purge
        rm -rf /var/spool/gridengine /var/lib/gridengine
    ;;
    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


exit 0

